<?xml version="1.0" encoding="UTF-8"?>
 <web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
 
   <context-param>
     <param-name>contextConfigLocation</param-name>
     <param-value>classpath*:META-INF/spring/applicationContext*.xml 
     /WEB-INF/spring/security-config.xml  
     /WEB-INF/spring/i18n-config.xml
     classpath*:META-INF/gateway/*.xml
     </param-value>
   </context-param>
 
   <context-param>
     <param-name>defaultHtmlEscape</param-name>
     <param-value>true</param-value>
   </context-param>
 
   <context-param>
     <param-name>webAppRootKey</param-name>
     <param-value>webapp.citruspay-ssl-page</param-value>
   </context-param>
 
   <!-- profiler environment setup -->
   <context-param>
     <param-name>spring.profiles.active</param-name>
     <param-value>production</param-value>
   </context-param>
   <!-- end profiler environment setup -->
 
   <!-- Creates the Spring Container shared by all Servlets and Filters -->
   <listener>
     <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
   </listener>
   <!-- Prevents cross site scripting by escaping HTML special characters while 
     using JSP EL -->
   <listener>
     <listener-class>com.citruspay.common.security.xss.EscapeXmlELResolverListener</listener-class>
   </listener>
   <filter>
         <filter-name>SessionFilter</filter-name>
         <filter-class>com.citruspay.common.web.LogSessionInterceptor</filter-class>
     </filter>
     <filter-mapping>
         <filter-name>SessionFilter</filter-name>
         <url-pattern>/*</url-pattern>
     </filter-mapping>
   <filter>
     <filter-name>XSS</filter-name>
     <!-- <display-name>XSS</display-name>
     <description></description> -->
     <filter-class>com.citruspay.sslpage.xss.filter.CrossScriptingFilter</filter-class>
   </filter>
   <filter-mapping>
     <filter-name>XSS</filter-name>
     <url-pattern>/*</url-pattern>
   </filter-mapping>
 
   <!-- Processes application requests -->
   <servlet>
     <servlet-name>pg</servlet-name>
     <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
     <!--  <init-param>
       <param-name>contextConfigLocation</param-name>
       <param-value>/WEB-INF/spring/webmvc-config.xml</param-value>
     </init-param> -->
     <load-on-startup>1</load-on-startup>
   </servlet>
 
   <servlet-mapping>
     <servlet-name>pg</servlet-name>
     <url-pattern>/</url-pattern>
   </servlet-mapping>
 
   <!-- - This is useful because current browsers typically do not - set a 
     character encoding even if specified in the HTML page or form -->
   <filter>
     <filter-name>encodingFilter</filter-name>
     <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
     <init-param>
       <param-name>encoding</param-name>
       <param-value>UTF-8</param-value>
     </init-param>
     <init-param>
       <param-name>forceEncoding</param-name>
       <param-value>true</param-value>
     </init-param>
   </filter>
 
   <filter-mapping>
     <filter-name>encodingFilter</filter-name>
     <url-pattern>/*</url-pattern>
   </filter-mapping>
   <filter>
     <filter-name>springSecurityFilterChain</filter-name>
     <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
   </filter>
 
   <filter-mapping>
     <filter-name>springSecurityFilterChain</filter-name>
     <url-pattern>/*</url-pattern>
   </filter-mapping>
   <filter>
     <filter-name>HttpMethodFilter</filter-name>
     <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
   </filter>
 
   <filter-mapping>
     <filter-name>HttpMethodFilter</filter-name>
     <url-pattern>/*</url-pattern>
   </filter-mapping>
   
   <filter>
       <filter-name>deviceResolverRequestFilter</filter-name>
       <filter-class>org.springframework.mobile.device.DeviceResolverRequestFilter</filter-class>
   </filter>
   <!-- After 15 minutes an idle session will be invalidated. Comment cookie 
     config if not using https -->
   <session-config>
     <session-timeout>15</session-timeout>
      <!-- cookie-config>
       <secure>true</secure>
     </cookie-config --> 
     <tracking-mode>COOKIE</tracking-mode>
   </session-config>
 
 
   <!-- Comment security constraints if not using https -->
    <!-- security-constraint>
     <web-resource-collection>
       <web-resource-name>securedapp</web-resource-name>
       <url-pattern>/*</url-pattern>
     </web-resource-collection>
     <user-data-constraint>
       <transport-guarantee>CONFIDENTIAL</transport-guarantee>
     </user-data-constraint>
 
   </security-constraint --> 
 
   <!-- comment the section below for  DEV if not using connection pool -->
    <!-- resource-ref>
     <description>Tomcat JDBC Connection Pool</description>
     <res-ref-name>jdbc/citruspay</res-ref-name>
     <res-type>javax.sql.DataSource</res-type>
     <res-auth>Container</res-auth>
 
   </resource-ref -->
 
   <error-page>
     <exception-type>java.lang.Exception</exception-type>
     <location>/uncaughtException</location>
   </error-page>
 
   <error-page>
     <exception-type>com.citruspay.common.exception.ExpiredSessionException</exception-type>
     <location>/error/expiredSessionException</location>
   </error-page>
 
   <error-page>
     <error-code>404</error-code>
     <location>/resourceNotFound</location>
   </error-page>
 
   <error-page>
     <error-code>405</error-code>
     <location>/resourceNotFound</location>
   </error-page>
 
   <error-page>
     <error-code>500</error-code>
     <location>/uncaughtException</location>
   </error-page>
 
 </web-app>